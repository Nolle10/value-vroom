import { generateSchemaTypes, generateReactQueryComponents } from '@openapi-codegen/typescript'
import { defineConfig } from '@openapi-codegen/cli'
import { configDotenv } from "dotenv";
const baseUrl = configDotenv().parsed?.BASE_URL || 'http://localhost:8000'

export default defineConfig({
  api: {
    from: {
      source: 'url',
      url: baseUrl + '/openapi.json',
    },
    outputDir: 'src/api',
    to: async (context) => {
      const filenamePrefix = 'api'
      const { schemasFiles } = await generateSchemaTypes(context, {
        filenamePrefix,
      })

      if (!context.openAPIDocument.servers) {
        context.openAPIDocument.servers = []
      }

      context.openAPIDocument.servers[0] = {
        url: baseUrl,
      }

      await generateReactQueryComponents(context, {
        filenamePrefix,
        schemasFiles,
      })
      
      const baseUrlFile = `// This file is generated by openapi-codegen
export const baseUrl = '${baseUrl}'
`
      await context.writeFile(filenamePrefix + 'Url.ts', baseUrlFile)
    },
  },
})
